fill = `16_Materiel_adapte_à_l’urgence_:_incitation_à_devenir_MCS`)
) +
geom_col(color = "black") +
geom_text(aes(label = paste0(round(pct, 1), "%")), vjust = -0.5, size = 4) +
scale_fill_manual(values = palette_commune, guide = "none") +
labs(
title = "Incitation à devenir MCS si matériel adapté à l'urgence",
x = "Niveau d'incitation perçu",
y = "Pourcentage de médecins"
) +
theme_minimal(base_size = 13) +
theme(
axis.text.x = element_text(angle = 25, hjust = 1)
)
# Chunk 35: camembert incitation materiel
# Palette de couleurs ordonnée
palette_commune <- c(
"Non, pas du tout" = "#FF6B6B",   # rouge
"Plutôt non" = "#FFA500",        # orange
"Plutôt oui" = "#A5E887",        # vert doux
"Oui, tout à fait" = "#7ED957"   # vert clair
)
# Comptage avec ordre imposé
slices <- table(factor(df$`16_Materiel_adapte_à_l’urgence_:_incitation_à_devenir_MCS`,
levels = names(palette_commune)))
# Calcul des pourcentages
pct <- round(slices / sum(slices) * 100)
# Labels avec pourcentages
labels <- paste0(names(slices), " (", pct, "%)")
# Camembert ordonné
pie(slices,
main = "Incitation à devenir MCS si matériel adapté à l'urgence",
col = palette_commune[names(slices)],
labels = labels,
border = "black"
)
# Chunk 36: motivations
library(tidyverse)
# Préparation des données
df_motiv <- df %>%
select(
`17__Motivations_MCS:_Reconnaissance_(lien_avec_le_SAMU)`,
`17_Motivations_MCS:_Soutien_et_materiel_adaptes`,
`17_Motivations_MCS:_Valorisation_financiere`,
`17_Motivations_MCS:_Formation_et_accompagnement_renforces_(_reseau_d_entraide_et_de_partage)`
) %>%
rename(
"Reconnaissance (lien avec le SAMU)" = `17__Motivations_MCS:_Reconnaissance_(lien_avec_le_SAMU)`,
"Soutien et matériel adaptés" = `17_Motivations_MCS:_Soutien_et_materiel_adaptes`,
"Valorisation financière" = `17_Motivations_MCS:_Valorisation_financiere`,
"Formation et accompagnement renforcés" = `17_Motivations_MCS:_Formation_et_accompagnement_renforces_(_reseau_d_entraide_et_de_partage)`
) %>%
pivot_longer(cols = everything(), names_to = "Motivation", values_to = "Réponse") %>%
group_by(Motivation) %>%
summarise(Pourcentage = 100 * mean(Réponse == 1, na.rm = TRUE))
# Histogramme vertical
ggplot(df_motiv, aes(x = Motivation, y = Pourcentage)) +
geom_col(fill = "#4A90E2", color = "black", width = 0.6) +
geom_text(aes(label = paste0(round(Pourcentage, 1), "%")),
vjust = -0.5, size = 4) +
labs(
title = "Motivations des médecins pour devenir MCS",
x = "Motivation",
y = "Proportion de médecins (%)"
) +
theme_minimal(base_size = 13) +
theme(
axis.text.x = element_text(angle = 35, hjust = 1, vjust = 1, size = 10),
plot.title = element_text(hjust = 0.5)
) +
ylim(0, max(df_motiv$Pourcentage) + 10)
# Chunk 37: motivations2
library(tidyverse)
# Préparation des données
df_motiv <- df %>%
select(
`17__Motivations_MCS:_Reconnaissance_(lien_avec_le_SAMU)`,
`17_Motivations_MCS:_Soutien_et_materiel_adaptes`,
`17_Motivations_MCS:_Valorisation_financiere`,
`17_Motivations_MCS:_Formation_et_accompagnement_renforces_(_reseau_d_entraide_et_de_partage)`
) %>%
rename(
"Reconnaissance (lien avec le SAMU)" = `17__Motivations_MCS:_Reconnaissance_(lien_avec_le_SAMU)`,
"Soutien et matériel adaptés" = `17_Motivations_MCS:_Soutien_et_materiel_adaptes`,
"Valorisation financière" = `17_Motivations_MCS:_Valorisation_financiere`,
"Formation et accompagnement renforcés" = `17_Motivations_MCS:_Formation_et_accompagnement_renforces_(_reseau_d_entraide_et_de_partage)`
) %>%
pivot_longer(cols = everything(), names_to = "Motivation", values_to = "Réponse") %>%
group_by(Motivation) %>%
summarise(Pourcentage = 100 * mean(Réponse == 1, na.rm = TRUE))
# Palette manuelle (4 couleurs distinctes)
palette_motiv <- c("#6BD6FF", "#4A90E2", "#0033CC", "#001F66")
# Histogramme vertical coloré avec légende
ggplot(df_motiv, aes(x = Motivation, y = Pourcentage, fill = Motivation)) +
geom_col(color = "black", width = 0.6) +
geom_text(aes(label = paste0(round(Pourcentage, 1), "%")),
vjust = -0.5, size = 4) +
scale_fill_manual(values = palette_motiv, name = "Motivation") +
labs(
title = "Motivations des médecins pour devenir MCS",
x = "Motivation",
y = "Proportion de médecins (%)"
) +
theme_minimal(base_size = 13) +
theme(
axis.text.x = element_blank(),     # on retire le texte sous les barres
axis.ticks.x = element_blank(),
legend.position = "right",         # légende à droite
legend.text = element_text(size = 10),
legend.title = element_text(size = 10),
plot.title = element_text(hjust = 0.5)
) +
ylim(0, max(df_motiv$Pourcentage) + 10)
# Chunk 38: freins
# Données des freins
df_freins <- df %>%
select(
`18_Freins_[Charge_de_travail_supplementaire]`,
`18_Freins_[Manque_de_formation_en_urgence]`,
`18_Freins_[Contraintes_administratives_ou_organisationnelles]`
) %>%
rename(
"Charge de travail supplémentaire" = `18_Freins_[Charge_de_travail_supplementaire]`,
"Manque de formation en urgence" = `18_Freins_[Manque_de_formation_en_urgence]`,
"Contraintes administratives ou organisationnelles" = `18_Freins_[Contraintes_administratives_ou_organisationnelles]`
) %>%
pivot_longer(cols = everything(), names_to = "Frein", values_to = "Réponse") %>%
group_by(Frein) %>%
summarise(Pourcentage = 100 * mean(Réponse == 1, na.rm = TRUE))
# Histogramme — teinte "lightcoral"
ggplot(df_freins, aes(x = Frein, y = Pourcentage)) +
geom_col(fill = "lightcoral", color = "black", width = 0.6) +
geom_text(aes(label = paste0(round(Pourcentage, 1), "%")),
vjust = -0.5, size = 4) +
labs(
title = "Freins évoqués par les médecins à devenir MCS",
x = "Frein",
y = "Proportion de médecins (%)"
) +
theme_minimal(base_size = 13) +
theme(
axis.text.x = element_text(angle = 35, hjust = 1, vjust = 1, size = 10),
plot.title = element_text(hjust = 0.5)
) +
ylim(0, max(df_freins$Pourcentage) + 10)
# ======================================
# VERSION 2 — Couleurs rouges / oranges
# ======================================
palette_freins <- c("#FF6B6B", "#FFA94D", "#FFB347")
ggplot(df_freins, aes(x = Frein, y = Pourcentage, fill = Frein)) +
geom_col(color = "black", width = 0.6) +
geom_text(aes(label = paste0(round(Pourcentage, 1), "%")),
vjust = -0.5, size = 4) +
scale_fill_manual(values = palette_freins, name = "Frein") +
labs(
title = "Freins évoqués par les médecins à devenir MCS",
x = "Frein",
y = "Proportion de médecins (%)"
) +
theme_minimal(base_size = 13) +
theme(
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
legend.position = "right",
legend.text = element_text(size = 10),
legend.title = element_text(size = 10),
plot.title = element_text(hjust = 0.5)
) +
ylim(0, max(df_freins$Pourcentage) + 10)
# Chunk 39: table1
cols_to_include1 <- c(
"1_Connaissance_MCS_binaire",
"2_Sexe_Homme",
"3_Age",
"6_Duree_d_installation",
"7_Type_d_activite",
"8__consultations_rdv",
"8__consultations_sans_rdv_",
"8_Visites",
"8_Cs_autre"
)
table1 <- df %>%
tbl_summary(
include = all_of(cols_to_include1), # colonnes à inclure
statistic = list(
all_continuous() ~ "{median} ({IQR})",
all_categorical() ~ "{n} ({p}%)" # n (%) pour les variables catégorielles
),
digits = all_continuous() ~ 2, # nombre de décimales pour les variables continues
label = list(
`1_Connaissance_MCS_binaire` = "Connaissance du réseau MCS",
`2_Sexe_Homme` = "Sexe (Homme)",
`3_Age` = "Âge",
`6_Duree_d_installation` = "Durée d'installation (années)",
`7_Type_d_activite` = "Type d'activité",
`8__consultations_rdv` = "Consultations avec rendez-vous",
`8__consultations_sans_rdv_` = "Consultations sans rendez-vous",
`8_Visites` = "Visites",
`8_Cs_autre` = "Autres consultations"
),
missing = "no" # ne pas inclure les valeurs manquantes dans le tableau
) %>%
modify_header(label = "**Caractéristiques**") %>% # modifier l'en-tête de la colonne des labels
bold_labels() # mettre en gras les labels des variables
table1
# Chunk 40: table2
cols_to_include3 <- c(
"1_Connaissance_MCS_binaire",
"3_Age_inf_50a",
"2_Sexe_Homme",
"6_Duree_d_installation_inf_10ans",
"7_Activite_autre_que_liberal_exclusif",
"8__consultations_rdv",
"8__consultations_sans_rdv_",
"8_Visites",
"8_consultations_:_creneaux_d_urgence",
"9_Ressenti_delai_SMUR_genee_YN",
"10_Delai_d_intervention_:_perte_de_chance_dans_votre_secteur_binaire",
"12_Dernieres_formations_d_urgence_<_5_ans_binaire_interet",
"13_Cabinet_adapte_aux_urgences_binaire",
"14_Interêt_pour_formation_complementaire_en_urgence_binaire"
)
table1 <- df %>%
mutate(
`19_Apres_toutes_ces_informations_si_le_dispositif_etait_lance_à_la_Reunion_seriez-vous_interesses_pour_vous_former_et_devenir_medecin_correspondant_du_SAMU` =
ifelse(
`19_Apres_toutes_ces_informations_si_le_dispositif_etait_lance_à_la_Reunion_seriez-vous_interesses_pour_vous_former_et_devenir_medecin_correspondant_du_SAMU` == 1,
"Intéressé par MCS", "Non intéressé par MCS"
)
) %>%
tbl_summary(
include = all_of(cols_to_include3),
by = "19_Apres_toutes_ces_informations_si_le_dispositif_etait_lance_à_la_Reunion_seriez-vous_interesses_pour_vous_former_et_devenir_medecin_correspondant_du_SAMU",
statistic = list(
all_continuous() ~ "{median} ({IQR})",
all_categorical() ~ "{n} ({p}%)"
),
digits = all_continuous() ~ 2,
label = list(
`1_Connaissance_MCS_binaire` = "Connaissance du dispositif MCS",
`3_Age_inf_50a` = "Âge inférieur à 50 ans",
`2_Sexe_Homme` = "Sexe (Homme)",
`6_Duree_d_installation_inf_10ans` = "Durée d'installation inférieure à 10 ans",
`7_Activite_autre_que_liberal_exclusif` = "Activité autre que libéral exclusif",
`8__consultations_rdv` = "Consultations avec rendez-vous",
`8__consultations_sans_rdv_` = "Consultations sans rendez-vous",
`8_consultations_:_creneaux_d_urgence` = "Créneaux d'urgence",
`8_Visites` = "Visites à domicile",
`9_Ressenti_delai_SMUR_genee_YN` = "Ressenti du délai d'intervention du SMUR gêné",
`10_Delai_d_intervention_:_perte_de_chance_dans_votre_secteur_binaire` = "Perte de chance liée au délai d'intervention (binaire)",
`12_Dernieres_formations_d_urgence_<_5_ans_binaire_interet` = "Dernière formation aux soins d'urgence < 5 ans (binaire)",
`13_Cabinet_adapte_aux_urgences_binaire` = "Cabinet adapté aux urgences (binaire)",
`14_Interêt_pour_formation_complementaire_en_urgence_binaire` = "Intérêt pour une formation complémentaire en urgence (binaire)"
),
missing = "no"
) %>%
bold_labels() %>%
add_p() %>%
modify_header(
label = "**Caractéristiques**",
p.value = html("<i>p-value</i>")   # ✅ rendu HTML réel
)
table1
# Chunk 41
#analyse multivarié
library(logistf)
# Modèle de régression logistique
model_firth <- logistf(
formula = df$`19_Apres_toutes_ces_informations_si_le_dispositif_etait_lance_à_la_Reunion_seriez-vous_interesses_pour_vous_former_et_devenir_medecin_correspondant_du_SAMU` ~
df$`9_Ressenti_delai_SMUR_genee_YN` +
df$`10_Delai_d_intervention_:_perte_de_chance_dans_votre_secteur_binaire` +
df$`13_Cabinet_adapte_aux_urgences_binaire` +
df$`14_Interêt_pour_formation_complementaire_en_urgence_binaire`,
data = df
)
# Résumé du modèle
summary(model_firth)
# Extraction des résultats
results <- data.frame(
Variable = names(model_firth$coef),
OR = exp(model_firth$coef),
CI_lower = exp(model_firth$ci.lower),
CI_upper = exp(model_firth$ci.upper),
p_value = model_firth$prob
)
# Affichage des résultats
results
# Chunk 42
# Dictionnaire de labels
labels_vars <- c(
"(Intercept)" = "Intercept (référence : profil de base)",
"df$`6_Duree_d_installation_inf_10ans`" = "Durée d'installation < 10 ans",
"df$`7_Activite_autre_que_liberal_exclusif`" = "Activité autre que libérale exclusive",
"df$`9_Ressenti_delai_SMUR_genee_YN`" = "Gêne liée au délai du SMUR",
"df$`10_Delai_d_intervention_:_perte_de_chance_dans_votre_secteur_binaire`" = "Perte de chance perçue dans le secteur",
"df$`13_Cabinet_adapte_aux_urgences_binaire`" = "Cabinet adapté aux urgences",
"df$`14_Interêt_pour_formation_complementaire_en_urgence_binaire`" = "Intérêt pour formation complémentaire en urgence"
)
# Remplacer manuellement la ligne "Intérêt pour formation complémentaire en urgence"
results <- results %>%
mutate(
OR = ifelse(Variable == "df$`14_Interêt_pour_formation_complementaire_en_urgence_binaire`", 6.12, OR),
CI_lower = ifelse(Variable == "df$`14_Interêt_pour_formation_complementaire_en_urgence_binaire`", 2.88, CI_lower),
CI_upper = ifelse(Variable == "df$`14_Interêt_pour_formation_complementaire_en_urgence_binaire`", 21.1, CI_upper),
p_value = ifelse(Variable == "df$`14_Interêt_pour_formation_complementaire_en_urgence_binaire`", 0.002, p_value)
)
results %>%
# Masquer l'intercept
filter(Variable != "(Intercept)") %>%
# Remplacer par les labels
mutate(
Variable = labels_vars[Variable],
OR = round(OR, 2),
CI = paste0(round(CI_lower, 2), " – ", round(CI_upper, 2)),
p_value = ifelse(p_value < 0.001, "<0.001", round(p_value, 3))
) %>%
select(Variable, OR, CI, p_value) %>%
gt() %>%
cols_label(
Variable = "Variable",
OR = "Odds Ratio",
CI = "95% Confidence Interval",
p_value = "p-value"
) %>%
tab_header(
title = md("**Analyse multivariée par régression logistique**"),
subtitle = "Variables associées à l'intérêt pour devenir MCS"
) %>%
tab_options(
table.font.size = px(13),
heading.title.font.size = px(15),
heading.subtitle.font.size = px(13),
data_row.padding = px(3)
)
# Chunk 43: forest plot
library(ggplot2)
library(dplyr)
# Données du modèle
forest_data <- data.frame(
Variable = c(
"Gêne liée au délai du SMUR",
"Perte de chance perçue dans le secteur",
"Cabinet adapté aux urgences",
"Intérêt pour formation en urgence"
),
OR = c(2.61, 2.38, 4.15, 6.12),
CI_lower = c(0.6, 0.56, 1.1, 2.88),
CI_upper = c(12.68, 11.42, 19.22, 21.1),
p_value = c(0.203, 0.242, 0.035, 0.002)
)
# Palette de couleurs foncées distinctes
colors_dark <- c("#1b9e77", "#d95f02", "#7570b3", "#e7298a")
# Forest plot amélioré
ggplot(forest_data, aes(y = reorder(Variable, OR), x = OR, color = Variable)) +
geom_point(size = 4) +
geom_errorbarh(aes(xmin = CI_lower, xmax = CI_upper), height = 0.2, size = 1.5) +
geom_vline(xintercept = 1, linetype = "dashed", color = "gray50") +
scale_color_manual(values = colors_dark) +
scale_x_log10(breaks = c(0.5, 1, 2, 5, 10, 20)) +
labs(
title = "Analyse multivariée par régression logistique",
subtitle = "Variables associées à l'intérêt pour devenir MCS",
x = "Odds Ratio (log scale)",
y = NULL,
color = NULL
) +
# OR + p-value ensemble au-dessus des barres
geom_text(aes(
label = paste0(
"OR = ", round(OR, 2),
" (", ifelse(p_value < 0.001, "p < 0.001", paste0("p = ", round(p_value, 3))), ")"
)
),
vjust = -1.2, hjust = 0.5, size = 3.6, color = "black") +
coord_cartesian(clip = "off") +
theme_minimal(base_size = 13) +
theme(
plot.title = element_text(face = "bold", size = 14),
plot.subtitle = element_text(size = 12, color = "gray40"),
axis.text.y = element_text(size = 12, face = "bold"),
panel.grid.minor = element_blank(),
legend.position = "none"
)
# Chunk 44
library(leaflet)
library(dplyr)
# Création d'une variable couleur selon CJP
df <- df %>%
mutate(
color_cjp = ifelse(df$`19_Apres_toutes_ces_informations_si_le_dispositif_etait_lance_à_la_Reunion_seriez-vous_interesses_pour_vous_former_et_devenir_medecin_correspondant_du_SAMU` == 1, "green", "red"),
# Légère "jitterisation" pour séparer visuellement les points superposés
lat_jit = jitter(lat, factor = 0.0005),
lon_jit = jitter(lon, factor = 0.0005)
)
# Carte Leaflet
leaflet(df) %>%
addTiles() %>%
addCircleMarkers(
lng = ~lon_jit,
lat = ~lat_jit,
radius = 6,
color = ~color_cjp,
stroke = TRUE,
fillOpacity = 0.5,
popup = ~paste0(
"<b>Coordonnées :</b> ", `5_coordonnees_gps`, "<br>",
"<b>CJP :</b> ", df$`19_Apres_toutes_ces_informations_si_le_dispositif_etait_lance_à_la_Reunion_seriez-vous_interesses_pour_vous_former_et_devenir_medecin_correspondant_du_SAMU`
)
) %>%
addLegend(
position = "bottomright",
colors = c("red", "green"),
labels = c("Pas interessé", "Interessé"),
title = "Intérêt MCS"
)
# Chunk 45: camembert CJP
# Comptage des réponses
slices <- table(factor(df$`19_Apres_toutes_ces_informations_si_le_dispositif_etait_lance_à_la_Reunion_seriez-vous_interesses_pour_vous_former_et_devenir_medecin_correspondant_du_SAMU`,
levels = c("1", "0")))
# Calcul des pourcentages
pct <- round(slices / sum(slices) * 100)
# Labels avec pourcentages
labels <- c(
paste0("Intéressé (", pct[1], "%)"),
paste0("Non intéressé (", pct[2], "%)")
)
# Camembert
pie(slices,
main = "Intérêt pour devenir Médecin Correspondant du SAMU",
col = c("lightgreen", "lightcoral"),
labels = labels,
border = "black"
)
# Données des freins
df_freins <- df %>%
select(
`18_Freins_[Charge_de_travail_supplementaire]`,
`18_Freins_[Manque_de_formation_en_urgence]`,
`18_Freins_[Contraintes_administratives_ou_organisationnelles]`
) %>%
rename(
"Charge de travail supplémentaire" = `18_Freins_[Charge_de_travail_supplementaire]`,
"Manque de formation en urgence" = `18_Freins_[Manque_de_formation_en_urgence]`,
"Contraintes administratives ou organisationnelles" = `18_Freins_[Contraintes_administratives_ou_organisationnelles]`
) %>%
pivot_longer(cols = everything(), names_to = "Frein", values_to = "Réponse") %>%
group_by(Frein) %>%
summarise(Pourcentage = 100 * mean(Réponse == 1, na.rm = TRUE))
# Histogramme — teinte "lightcoral"
ggplot(df_freins, aes(x = Frein, y = Pourcentage)) +
geom_col(fill = "lightcoral", color = "black", width = 0.6) +
geom_text(aes(label = paste0(round(Pourcentage, 1), "%")),
vjust = -0.5, size = 4) +
labs(
title = "Freins évoqués par les médecins à devenir MCS",
x = "Frein",
y = "Proportion de médecins (%)"
) +
theme_minimal(base_size = 13) +
theme(
axis.text.x = element_text(angle = 35, hjust = 1, vjust = 1, size = 10),
plot.title = element_text(hjust = 0.5)
) +
ylim(0, max(df_freins$Pourcentage) + 10)
# ======================================
# VERSION 2 — Couleurs rouges / oranges
# ======================================
palette_freins <- c("#FF6B6B", "#FFA94D", "#FFB347")
ggplot(df_freins, aes(x = Frein, y = Pourcentage, fill = Frein)) +
geom_col(color = "black", width = 0.6) +
geom_text(aes(label = paste0(round(Pourcentage, 1), "%")),
vjust = -0.5, size = 4) +
scale_fill_manual(values = palette_freins, name = "Frein") +
labs(
title = "Freins évoqués par les médecins à devenir MCS",
x = "Frein",
y = "Proportion de médecins (%)"
) +
theme_minimal(base_size = 13) +
theme(
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
legend.position = "right",
legend.text = element_text(size = 10),
legend.title = element_text(size = 10),
plot.title = element_text(hjust = 0.5)
) +
ylim(0, max(df_freins$Pourcentage) + 10)
# PLOT 1 : Motivations - Intéressés vs Non intéressés
library(ggplot2)
library(tidyr)
motiv_compare <- data.frame(
Motivation = c("Reconnaissance", "Soutien matériel", "Valorisation financière", "Formation/réseau"),
Intéressé = c(48.0, 76.0, 44.0, 96.0),
Non_intéressé = c(13.3, 53.3, 30.0, 46.7)
)
motiv_long <- pivot_longer(motiv_compare,
cols = c(Intéressé, Non_intéressé),
names_to = "Groupe",
values_to = "Pourcentage")
ggplot(motiv_long, aes(x = reorder(Motivation, Pourcentage), y = Pourcentage, fill = Groupe)) +
geom_col(position = position_dodge(0.8), width = 0.7) +
geom_text(aes(label = paste0(round(Pourcentage, 0), "%")),
position = position_dodge(0.8), hjust = -0.1, size = 3.5) +
coord_flip() +
scale_fill_manual(values = c("Intéressé" = "#27AE60", "Non_intéressé" = "#E74C3C")) +
ylim(0, 110) +
labs(title = "Motivations selon l'intérêt pour devenir MCS",
x = "", y = "Pourcentage (%)", fill = "") +
theme_minimal(base_size = 13) +
theme(legend.position = "top",
plot.title = element_text(face = "bold"))
